db {
  default {
    driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"
    url = "jdbc:sqlserver://dev-mssql-01.database.chinacloudapi.cn:1433;DatabaseName=********"
    user = "ops"
    password = "***********"
    connectionTimeout = 10 seconds
    numThreads = 16
  }
  prod {
    driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"
    url = "jdbc:sqlserver://prod-mssql-01.database.chinacloudapi.cn:1433;DatabaseName=********"
    user = "opt"
    password = "***********"
    connectionTimeout = 10 seconds
    numThreads = 16
  }
  dw {
    driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"
    url = "jdbc:sqlserver://prod-mssql-dw-01.database.chinacloudapi.cn:1433;DatabaseName=********"
    user = "ops"
    password = "***********"
    connectionTimeout = 10 seconds
    numThreads = 16
  }
}

spark {
  cassandra {
    connection {
      host = cluster101
      port = 9042
    }
    auth {
      username = steycassandra01
      password = SteyCassandra2019
    }
  }
  redis {
    host = "192.168.44.241"
    port = 6379
  }
  redis_cluster {
    host1 = "192.168.44.241"
    port1 = 6379
    port2 = 6389
    host2 = "192.168.44.242"
    port3 = 6380
    port4 = 6390
    host3 = "192.168.44.243"
    port5 = 6381
    port6 = 6391
  }
  kafka {
    prod {
      broker = "http://prod-eventhub-01.servicebus.chinacloudapi.cn:9093"
      sasl_eh = "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"$ConnectionString\" password=\"Endpoint=sb://prod-eventhub-01.servicebus.chinacloudapi.cn/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=********"
      sasl_mechanism = "PLAIN"
      protocol = "SASL_SSL"
      timeout_request = "60000"
      timeout_session = "60000"
      data_los = "false"
      topic = "stey-iot-device-status"
    }
    cluster {
      broker = "cluster101:9092"
      timeout_request = "60000"
      timeout_session = "60000"
      key_serializer = "org.apache.kafka.common.serialization.StringSerializer"
      value_serializer = "org.apache.kafka.common.serialization.StringSerializer"
      offset_reset = "latest"
      auto_commit = "false"
    }
  }
}